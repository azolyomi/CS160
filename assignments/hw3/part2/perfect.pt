fn isperfect(num: int) -> bool {
    let i: int = 2;
    let sum: int = 1;
    while i < num {
        let div: int = (num / i);
        if ((div * i) == num) then {
            sum = sum + i;
            i = i + 1
        } else { i = i + 1 }
    };
    ((sum == num) && (sum != 1))
}

fn main () -> unit {
    let n: int = 2;
    while n <= 1000 {
        let x: bool = isperfect(n);
        if x then {
            print_int(n);
            print_ln();
            n = n + 1
        } else { n = n + 1 }
    }
}